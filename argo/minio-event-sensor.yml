apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: minio
  namespace: argo-events
spec:
  dependencies:
    - eventName: example
      eventSourceName: minio
      name: dep
  template:
    metadata: {}
    serviceAccountName: argo-events-sa
  triggers:
    - template:
        k8s:
          group: argoproj.io
          operation: create
          parameters:
            - src:
                dataKey: notification.0.s3.object.key
                dependencyName: dep
              dest: spec.templates.0.steps.0.0.arguments.artifacts.0.s3.key
            - src:
                dataKey: notification.0.s3.object.key
                dependencyName: dep
              dest: spec.templates.0.steps.0.0.arguments.parameters.0.value
              operation: append
            - src:
                dataKey: notification.0.s3.bucket.name
                dependencyName: dep
              dest: spec.templates.0.steps.0.0.arguments.artifacts.0.s3.bucket
            - src:
                dataKey: notification.0.s3.object.key
                dependencyName: dep
              dest: spec.templates.1.steps.0.0.arguments.parameters.0.value
              operation: append
            - src:
                dataKey: notification.0.s3.object.key
                dependencyName: dep
              dest: spec.templates.1.steps.0.0.arguments.artifacts.0.s3.key
            - src:
                dataKey: notification.0.s3.bucket.name
                dependencyName: dep
              dest: spec.templates.1.steps.0.0.arguments.artifacts.0.s3.bucket
          resource: workflows
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                namespace: argo
                generateName: local-rebuild-
              spec:
                entrypoint: runner
                onExit: exit-handler
                metrics:
                  prometheus:
                  - gauge:
                      value: '{{workflow.duration}}'
                    help: Duration gauge by name
                    labels:
                    - key: name
                      value: '{{workflow.name}}'
                    name: exec_duration_gauge
                arguments:
                  parameters:
                    - name: imageRegistry
                      value: docker.io
                    - name: inputEndpoint
                      value: play.min.io
                    - name: inputCredentialsSecret
                      value: my-input-credentials
                    - name: outputEndpoint
                      value: s3.amazonaws.com
                    - name: outputCredentialsSecret
                      value: my-output-credentials
                    - name: outputBucket
                      value: yarden-output
                templates:
                  - name: runner
                    steps:
                      - - name: process
                          template: processor
                          arguments:
                            parameters:
                              - name: objectKey
                                value:
                            artifacts:
                              - name: object
                                s3:
                                  endpoint: "{{workflow.parameters.inputEndpoint}}"
                                  bucket: will be replaced by notification
                                  key: will be replaced by notification
                                  accessKeySecret:
                                    name: "{{workflow.parameters.inputCredentialsSecret}}"
                                    key: accesskey
                                  secretKeySecret:
                                    name: "{{workflow.parameters.inputCredentialsSecret}}"
                                    key: secretkey
                  - name: exit-handler
                    steps:
                      - - name: metadata
                          template: metadata-generator
                          arguments:
                            parameters:
                              - name: objectKey
                                value:
                          artifacts:
                            - name: object
                              s3:
                                endpoint: '{{workflow.parameters.inputEndpoint}}'
                                bucket: will be replaced by notification
                                key: will be replaced by notification
                                accessKeySecret:
                                  key: accesskey
                                  name: '{{workflow.parameters.inputCredentialsSecret}}'  
                                secretKeySecret:
                                  key: secretkey
                                  name: '{{workflow.parameters.inputCredentialsSecret}}'     
                  - name: processor
                    inputs:
                      parameters:
                        - name: objectKey
                      artifacts:
                        - name: object
                          path: /input/{{inputs.parameters.objectKey}}
                    container:
                      image: "{{workflow.parameters.imageRegistry}}/yardenshoham/glasswall-rebuild-eval:process-mode-0"
                      imagePullPolicy: Always
                    outputs:
                      artifacts:
                        - name: xml-report
                          path: /output/Managed/
                          archive:
                            none: {}
                          s3:
                            endpoint: "{{workflow.parameters.outputEndpoint}}"
                            bucket: "{{workflow.parameters.outputBucket}}"
                            key: "{{inputs.parameters.objectKey}}.xml"
                            accessKeySecret:
                              name: "{{workflow.parameters.outputCredentialsSecret}}"
                              key: accesskey
                            secretKeySecret:
                              name: "{{workflow.parameters.outputCredentialsSecret}}"
                              key: secretkey
                    - name: metadata-generator
                      inputs:
                        artifacts:
                        - name: object
                          path: /input/{{inputs.parameters.objectKey}}
                        parameters:
                        - name: objectKey
                      script:
                        image: python:alpine3.6
                        command: [python]
                        source: |
                          import json
                          import os
                          from datetime import datetime
                          now = datetime.now()
                          creation_date = now.strftime("%m/%d/%Y, %H:%M:%S")
                          workflow_name = "{{workflow.name}}"
                          workflow_duration = "{{workflow.duration}}"
                          filename = "/input/{{inputs.parameters.objectKey}}"
                          size = os.path.getsize(filename)
                          extension = os.path.splitext(filename)[1][1:].strip().lower()
                          name = os.path.basename(filename)
                          metadata_arr = {'size': size, 'name': name, 'workflow': workflow_name, 'duration': workflow_duration, 'extension': extension, 'creation_date': creation_date}
                          metadata_json = json.dumps(metadata_arr)
                          os.mkdir("/tmp/output")
                          metadata_file = open("/tmp/output/metadata.json", "w")
                          n = metadata_file.write(metadata_json)
                          metadata_file.close()
                      outputs:
                        artifacts:
                        - name: metadata
                          archive:
                            none: {}
                          path: /tmp/output/
                          s3:
                            accessKeySecret:
                              key: accesskey
                              name: '{{workflow.parameters.outputCredentialsSecret}}'
                            secretKeySecret:
                              key: secretkey
                              name: '{{workflow.parameters.outputCredentialsSecret}}'
                            bucket: '{{workflow.parameters.outputBucket}}'
                            endpoint: '{{workflow.parameters.outputEndpoint}}'
                            key: '{{inputs.parameters.objectKey}}.xml'
          version: v1alpha1
        name: minio-workflow-trigger